buildscript {
    ext {
        compose_version = '1.3.0-alpha01'
        compose_compiler = '1.2.0'
        hypco_version = '1.0.0-beta02'
    }

    repositories {
        mavenCentral()
        google()
    }
}
// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.0' apply false
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            name = 'GitHubPackage'
            url = uri("https://maven.pkg.github.com/${githubProperties['githubUser']}/hypco")
            credentials {
                username = "${githubProperties['githubUser']}"
                password = "${githubProperties['githubKey']}"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task cleanLibrary { dependsOn(':hypco-library:clean'); group('hypco') }
task buildLibrary { dependsOn(':hypco-library:build'); group('hypco') }
task publishLibrary { dependsOn(':hypco-library:publishDebugPublicationToGitHubPackageRepository'); group('hypco') }

task cleanBuildPublishLibrary {
    group('hypco')
    dependsOn 'cleanLibrary'
    dependsOn 'buildLibrary'
    dependsOn 'publishLibrary'

    tasks.findByName('buildLibrary').mustRunAfter('cleanLibrary')
    tasks.findByName('publishLibrary').mustRunAfter('buildLibrary')
}

task cleanHyperion { dependsOn(':hypco-hyperion:clean'); group('hypco') }
task buildHyperion { dependsOn(':hypco-hyperion:build'); group('hypco') }
task publishHyperion { dependsOn(':hypco-hyperion:publishDebugPublicationToGitHubPackageRepository'); group('hypco') }

task cleanBuildPublishHyperion {
    group('hypco')
    dependsOn 'cleanHyperion'
    dependsOn 'buildHyperion'
    dependsOn 'publishHyperion'

    tasks.findByName('buildLibrary').mustRunAfter('cleanHyperion')
    tasks.findByName('publishHyperion').mustRunAfter('buildHyperion')
}